import logging
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command

TOKEN = "7585579146:AAFrnCNSxFrBCJaJc8ZooGg2fB79iPgk4wg"

bot = Bot(token=TOKEN)
dp = Dispatcher()

logging.basicConfig(level=logging.INFO)

@dp.message(Command("start"))
async def start_command(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n/plugins - –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–ª–∞–≥–∏–Ω—ã\n/site - –°–∞–π—Ç —Å–µ—Ä–≤–µ—Ä–∞\n/telegram - –¢–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª")

@dp.message(Command("plugins"))
async def plugins_command(message: types.Message):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üì• –°–∫–∞—á–∞—Ç—å AuraResourceCheck", callback_data="download_AuraResourceCheck")],
        [InlineKeyboardButton(text="üì• –°–∫–∞—á–∞—Ç—å AuraDonate", callback_data="download_AuraDonate")]
    ])
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞–≥–∏–Ω –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è:", reply_markup=keyboard)

@dp.callback_query()
async def handle_callback(query: types.CallbackQuery):
    if query.data == "download_AuraResourceCheck":
        await query.message.answer("üîó –°—Å—ã–ª–∫–∞ –Ω–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ AuraResourceCheck: [–°–ö–ê–ß–ê–¢–¨](https://example.com/AuraResourceCheck)", parse_mode="Markdown")
    elif query.data == "download_AuraDonate":
        await query.message.answer("üîó –°—Å—ã–ª–∫–∞ –Ω–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ AuraDonate: [–°–ö–ê–ß–ê–¢–¨](https://example.com/AuraDonate)", parse_mode="Markdown")
    await query.answer()

@dp.message(Command("site"))
async def site_command(message: types.Message):
    await message.answer("–°–∞–π—Ç —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.")

@dp.message(Command("telegram"))
async def telegram_command(message: types.Message):
    await message.answer("–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª: https://t.me/auraway")

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
